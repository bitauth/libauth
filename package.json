{
  "name": "@bitauth/libauth",
  "version": "2.0.0-alpha.3",
  "description": "ultra-lightweight library for Bitcoin Cash, Bitcoin, and Bitauth",
  "type": "module",
  "main": "./build/index.js",
  "types": "./build/index.d.ts",
  "repository": "https://github.com/bitauth/libauth",
  "homepage": "https://libauth.org/",
  "license": "MIT",
  "keywords": [
    "authentication",
    "bitauth",
    "Bitcoin Cash",
    "Bitcoin",
    "cryptocurrency",
    "wasm",
    "crypto",
    "sha256",
    "ripemd160",
    "secp256k1",
    "sha1",
    "sha512",
    "HMAC",
    "wallet",
    "blockchain",
    "typescript",
    "webassembly",
    "BCH",
    "BTC"
  ],
  "scripts": {
    "compile:secp256k1": "docker build -f wasm/docker/secp256k1.Dockerfile . -t libauth-secp256k1 && docker run -it --mount type=bind,src=$(pwd)/src/lib,dst=/libauth/out,consistency=delegated libauth-secp256k1",
    "compile:hashes": "docker build -f wasm/docker/hashes.Dockerfile . -t libauth-hashes && docker run -it --mount type=bind,src=$(pwd)/src/lib,dst=/libauth/out,consistency=delegated libauth-hashes",
    "build": "run-p build:*",
    "build:tsc": "tsc -p tsconfig.json",
    "build:wasm": "run-p copy:wasm:secp256k1 copy:wasm:sha1 copy:wasm:sha256 copy:wasm:sha512 copy:wasm:ripemd160",
    "copy:wasm:secp256k1": "cpy --flat src/lib/bin/secp256k1/secp256k1.wasm build/lib/bin/secp256k1",
    "copy:wasm:sha1": "cpy --flat src/lib/bin/sha1/sha1.wasm build/lib/bin/sha1",
    "copy:wasm:sha256": "cpy --flat src/lib/bin/sha256/sha256.wasm build/lib/bin/sha256",
    "copy:wasm:sha512": "cpy --flat src/lib/bin/sha512/sha512.wasm build/lib/bin/sha512",
    "copy:wasm:ripemd160": "cpy --flat src/lib/bin/ripemd160/ripemd160.wasm build/lib/bin/ripemd160",
    "compile:debug:secp256k1": "docker run -it libauth-secp256k1 bash",
    "compile:debug:hashes": "docker run -it libauth-hashes bash",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:lint": "eslint . --ext .ts --fix",
    "gen:vmb-tests": "run-s build gen:vmb-tests:*",
    "gen:vmb-tests:bch": "node 'build/lib/vmb-tests/bch-vmb-tests.spec.helper.js' 'src/lib/vmb-tests/generated/bch' && prettier 'src/lib/vmb-tests/generated/bch/*.json' --write",
    "gen:vmb-tests-live": "node 'build/lib/vmb-tests/bch-vmb-tests.live.spec.helper.js'",
    "gen:schema": "run-p gen:schema:*",
    "gen:schema:authentication-template": "ts-json-schema-generator --no-ref-encode --path 'src/lib/compiler/template-types.ts' --type 'AuthenticationTemplate' > src/lib/schema/authentication-template.schema.json && prettier 'src/lib/schema/authentication-template.schema.json' --write && ajv compile -s src/lib/schema/authentication-template.schema.json --allowUnionTypes -o src/lib/schema/ajv/validate-authentication-template.js && prettier 'src/lib/schema/ajv/validate-authentication-template.js' --write && node -e \"const fs = require('fs'), path = 'src/lib/schema/ajv/validate-authentication-template.js'; fs.writeFileSync(path, fs.readFileSync(path, 'utf8').replace(/'use strict'[\\s\\S]*module.exports.default =/, 'export default'), 'utf8')\"",
    "gen:schema-TODO": "//TODO: use ajv compile --code-esm option after merge: https://github.com/ajv-validator/ajv-cli/pull/200",
    "gen:templates": "run-s build && node 'build/lib/transaction/fixtures/generate-templates.spec.helper.js' 'p2pkh' > src/lib/transaction/fixtures/templates/p2pkh.json && node 'build/lib/transaction/fixtures/generate-templates.spec.helper.js' '2-of-3' > src/lib/transaction/fixtures/templates/2-of-3.json && node 'build/lib/transaction/fixtures/generate-templates.spec.helper.js' '2-of-2-recoverable' > src/lib/transaction/fixtures/templates/2-of-2-recoverable.json && node 'build/lib/transaction/fixtures/generate-templates.spec.helper.js' 'sig-of-sig' > src/lib/transaction/fixtures/templates/sig-of-sig.json && node 'build/lib/transaction/fixtures/generate-templates.spec.helper.js' 'cash-channels' > src/lib/transaction/fixtures/templates/cash-channels.json && prettier 'src/lib/transaction/fixtures/templates/*.json' --write",
    "gen:graph": "mkdir -p temp && madge --image temp/deps-$(date +\"%FT%H%M\").svg build/index.js",
    "test": "run-s build test:*",
    "test-node18": "NODE_OPTIONS=--openssl-legacy-provider run-s build test:*",
    "test:deps": "node -e \"if(Object.keys(require('./package.json').dependencies).length > 0) { console.error('Dependencies are not allowed.'); process.exit(1); }\"",
    "test:schemas": "run-s gen:schema && if [ `git status src/lib/schema --porcelain | head -c1 | wc -c` -gt 0 ]; then echo \"Error: one or more schemas are outdated. Please review and commit the changes in src/lib/schema.\" && false; fi && echo \"Schemas are up to date.\"",
    "test:lint": "eslint . --ext .ts",
    "test:prettier": "prettier \"src/**/*.ts\" --list-different",
    "test:spelling": "cspell \"{README.md,.github/*.md,src/**/*.ts}\"",
    "test:cycles": "madge --circular build/index.js",
    "test:unit": "c8 ava",
    "test:unit:script_tests": "c8 ava --match='*[script_tests]*' --serial",
    "test:unit:vmb_tests": "c8 ava src/lib/vmb-tests/bch-vmb-tests.spec.ts --serial",
    "test:unit:vmb_test": "node 'build/lib/vmb-tests/bch-vmb-test.spec.helper.js'",
    "bench": "run-s build bench:browser-deps bench:test",
    "bench:test": "ava --config .ava.bench.config.js --serial --timeout=2m 2>&1 | tee bench.log",
    "bench:browser-deps": "browserify node_modules/chuhai/index.js --standalone chuhai -o build/bench/chuhai.js && browserify node_modules/hash.js/lib/hash.js --standalone hash -o build/bench/hash.js",
    "watch": "run-s build:tsc build:wasm && yarn build:tsc -- -w",
    "watch:single": "echo 'Usage: yarn watch:single --match=\"*pattern*\"' && ava -v --watch",
    "watch:test": "yarn test:unit:fast -- --watch -v",
    "watch:test-slow": "yarn test:unit -- --watch -v",
    "cov": "run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html",
    "cov:html": "c8 report --reporter=html",
    "cov:lcov": "c8 report --reporter=lcov",
    "cov:send": "run-s cov:lcov && codecov",
    "cov:check": "c8 report && c8 check-coverage --lines 90 --functions 90 --branches 90",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:logo": "cpy assets/libauth.svg build/docs",
    "doc:cname": "node -e \"console.log('libauth.org')\" > build/docs/CNAME",
    "doc:html": "typedoc src/index.ts --target ES6 --mode file --excludeNotExported --out build/docs",
    "doc:json": "typedoc src/index.ts --target ES6 --mode file --excludeNotExported --json build/docs/typedoc.json",
    "doc:next": "run-s build doc:extract doc:generate",
    "doc:extract": "api-extractor run --local --typescript-compiler-folder node_modules/typescript",
    "doc:generate": "api-documenter markdown -i temp -o docs/markdown",
    "doc:check-api": "api-extractor run --typescript-compiler-folder node_modules/typescript",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "version:alpha": "standard-version --prerelease alpha",
    "reset": "git clean -dfx && git reset --hard && yarn",
    "prepare-release": "run-s reset test cov:check doc:html doc:logo doc:cname version doc:publish",
    "prepare-release:alpha": "run-s reset test cov:check version:alpha"
  },
  "engines": {
    "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
  },
  "dependencies": {},
  "devDependencies": {
    "@ava/typescript": "^3.0.1",
    "@microsoft/api-documenter": "^7.17.13",
    "@microsoft/api-extractor": "^7.23.2",
    "@rollup/plugin-alias": "^3.1.9",
    "@rollup/plugin-commonjs": "^22.0.0",
    "@rollup/plugin-node-resolve": "^13.3.0",
    "@types/browserify": "^12.0.37",
    "@types/elliptic": "^6.4.14",
    "@types/express": "^4.17.13",
    "@types/puppeteer": "^5.4.6",
    "@typescript-eslint/eslint-plugin": "^5.23.0",
    "@typescript-eslint/parser": "^5.23.0",
    "ajv-cli": "^5.0.0",
    "asmcrypto.js": "^2.3.2",
    "ava": "^4.1.0",
    "ava-fast-check": "^5.0.0",
    "bcrypto": "^5.4.0",
    "bitcore-lib-cash": "^8.25.28",
    "browserify": "16.5.1",
    "c8": "^7.11.2",
    "chuhai": "^1.2.0",
    "codecov": "^3.8.3",
    "cpy-cli": "^4.1.0",
    "cspell": "^5.20.0",
    "cz-conventional-changelog": "^3.3.0",
    "elliptic": "^6.5.4",
    "eslint": "8.15.0",
    "eslint-config-bitauth": "^3.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-functional": "^4.2.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "express": "^4.18.1",
    "fast-check": "^2.25.0",
    "gh-pages": "^4.0.0",
    "hash.js": "^1.1.5",
    "madge": "^5.0.1",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.0.1",
    "prettier": "^2.6.2",
    "puppeteer": "^14.1.0",
    "rollup": "^2.73.0",
    "secp256k1": "^4.0.3",
    "source-map-support": "^0.5.21",
    "standard-version": "^9.3.2",
    "ts-json-schema-generator": "^1.0.0",
    "typedoc": "^0.22.13",
    "typescript": "^4.6.4"
  },
  "files": [
    "build",
    "!build/.tsbuildinfo",
    "!build/**/*.map",
    "!**/*.spec.*",
    "!**/*.json",
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    "SECURITY.md"
  ],
  "ava": {
    "failFast": true,
    "timeout": "20s",
    "typescript": {
      "compile": false,
      "rewritePaths": {
        "src/": "build/"
      }
    },
    "nodeArguments": [
      "--experimental-json-modules"
    ],
    "workerThreads": false
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "greenkeeper": {
    "ignore": [
      "@types/node"
    ]
  },
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": [
          "src/lib/vmb-tests/bch-vmb-tests.ts",
          "src/lib/schema/generated/*.js"
        ],
        "options": {
          "printWidth": 400
        }
      },
      {
        "files": [
          "src/lib/vmb-tests/generated/bch/*.json"
        ],
        "options": {
          "printWidth": 10000
        }
      }
    ]
  },
  "c8": {
    "exclude": [
      "**/*.bench.js",
      "**/*.spec.js",
      "**/*.spec.helper.js"
    ]
  },
  "sideEffects": false
}
