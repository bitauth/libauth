import { range } from '../../format/format.js';
import type { VmbTestDefinitionGroup } from '../../lib.js';
import { generateTestCases, setExpectedResults } from '../bch-vmb-test-utils.js';

export default [
  [
    'Basic push operations',
    [
      ['OP_0', 'OP_SIZE <0> OP_EQUAL OP_NIP', 'OP_0 (A.K.A. OP_PUSHBYTES_0, OP_FALSE): zero is represented by an empty stack item'],
      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0 $(<0> <$0> OP_NUM2BIN)', 'OP_SIZE <$0> OP_EQUAL OP_NIP', 'OP_PUSHBYTES_$0 produces $0-byte stack item'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 produces 1-byte stack item': [],
        'OP_PUSHBYTES_10 produces 10-byte stack item': [],
        'OP_PUSHBYTES_11 produces 11-byte stack item': [],
        'OP_PUSHBYTES_12 produces 12-byte stack item': [],
        'OP_PUSHBYTES_13 produces 13-byte stack item': [],
        'OP_PUSHBYTES_14 produces 14-byte stack item': [],
        'OP_PUSHBYTES_15 produces 15-byte stack item': [],
        'OP_PUSHBYTES_16 produces 16-byte stack item': [],
        'OP_PUSHBYTES_17 produces 17-byte stack item': [],
        'OP_PUSHBYTES_18 produces 18-byte stack item': [],
        'OP_PUSHBYTES_19 produces 19-byte stack item': [],
        'OP_PUSHBYTES_2 produces 2-byte stack item': [],
        'OP_PUSHBYTES_20 produces 20-byte stack item': [],
        'OP_PUSHBYTES_21 produces 21-byte stack item': [],
        'OP_PUSHBYTES_22 produces 22-byte stack item': [],
        'OP_PUSHBYTES_23 produces 23-byte stack item': [],
        'OP_PUSHBYTES_24 produces 24-byte stack item': [],
        'OP_PUSHBYTES_25 produces 25-byte stack item': [],
        'OP_PUSHBYTES_26 produces 26-byte stack item': [],
        'OP_PUSHBYTES_27 produces 27-byte stack item': [],
        'OP_PUSHBYTES_28 produces 28-byte stack item': [],
        'OP_PUSHBYTES_29 produces 29-byte stack item': [],
        'OP_PUSHBYTES_3 produces 3-byte stack item': [],
        'OP_PUSHBYTES_30 produces 30-byte stack item': [],
        'OP_PUSHBYTES_31 produces 31-byte stack item': [],
        'OP_PUSHBYTES_32 produces 32-byte stack item': [],
        'OP_PUSHBYTES_33 produces 33-byte stack item': [],
        'OP_PUSHBYTES_34 produces 34-byte stack item': [],
        'OP_PUSHBYTES_35 produces 35-byte stack item': [],
        'OP_PUSHBYTES_36 produces 36-byte stack item': [],
        'OP_PUSHBYTES_37 produces 37-byte stack item': [],
        'OP_PUSHBYTES_38 produces 38-byte stack item': [],
        'OP_PUSHBYTES_39 produces 39-byte stack item': [],
        'OP_PUSHBYTES_4 produces 4-byte stack item': [],
        'OP_PUSHBYTES_40 produces 40-byte stack item': [],
        'OP_PUSHBYTES_41 produces 41-byte stack item': [],
        'OP_PUSHBYTES_42 produces 42-byte stack item': [],
        'OP_PUSHBYTES_43 produces 43-byte stack item': [],
        'OP_PUSHBYTES_44 produces 44-byte stack item': [],
        'OP_PUSHBYTES_45 produces 45-byte stack item': [],
        'OP_PUSHBYTES_46 produces 46-byte stack item': [],
        'OP_PUSHBYTES_47 produces 47-byte stack item': [],
        'OP_PUSHBYTES_48 produces 48-byte stack item': [],
        'OP_PUSHBYTES_49 produces 49-byte stack item': [],
        'OP_PUSHBYTES_5 produces 5-byte stack item': [],
        'OP_PUSHBYTES_50 produces 50-byte stack item': [],
        'OP_PUSHBYTES_51 produces 51-byte stack item': [],
        'OP_PUSHBYTES_52 produces 52-byte stack item': [],
        'OP_PUSHBYTES_53 produces 53-byte stack item': [],
        'OP_PUSHBYTES_54 produces 54-byte stack item': [],
        'OP_PUSHBYTES_55 produces 55-byte stack item': [],
        'OP_PUSHBYTES_56 produces 56-byte stack item': [],
        'OP_PUSHBYTES_57 produces 57-byte stack item': [],
        'OP_PUSHBYTES_58 produces 58-byte stack item': [],
        'OP_PUSHBYTES_59 produces 59-byte stack item': [],
        'OP_PUSHBYTES_6 produces 6-byte stack item': [],
        'OP_PUSHBYTES_60 produces 60-byte stack item': [],
        'OP_PUSHBYTES_61 produces 61-byte stack item': [],
        'OP_PUSHBYTES_62 produces 62-byte stack item': [],
        'OP_PUSHBYTES_63 produces 63-byte stack item': [],
        'OP_PUSHBYTES_64 produces 64-byte stack item': [],
        'OP_PUSHBYTES_65 produces 65-byte stack item': [],
        'OP_PUSHBYTES_66 produces 66-byte stack item': [],
        'OP_PUSHBYTES_67 produces 67-byte stack item': [],
        'OP_PUSHBYTES_68 produces 68-byte stack item': [],
        'OP_PUSHBYTES_69 produces 69-byte stack item': [],
        'OP_PUSHBYTES_7 produces 7-byte stack item': [],
        'OP_PUSHBYTES_70 produces 70-byte stack item': [],
        'OP_PUSHBYTES_71 produces 71-byte stack item': [],
        'OP_PUSHBYTES_72 produces 72-byte stack item': [],
        'OP_PUSHBYTES_73 produces 73-byte stack item': [],
        'OP_PUSHBYTES_74 produces 74-byte stack item': [],
        'OP_PUSHBYTES_75 produces 75-byte stack item': [],
        'OP_PUSHBYTES_8 produces 8-byte stack item': [],
        'OP_PUSHBYTES_9 produces 9-byte stack item': [],
      }),
      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0 $(<0x01> <$0> OP_NUM2BIN)', '', 'OP_PUSHBYTES_$0 in unlocking bytecode'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 in unlocking bytecode': ['skip'],
        'OP_PUSHBYTES_10 in unlocking bytecode': [],
        'OP_PUSHBYTES_11 in unlocking bytecode': [],
        'OP_PUSHBYTES_12 in unlocking bytecode': [],
        'OP_PUSHBYTES_13 in unlocking bytecode': [],
        'OP_PUSHBYTES_14 in unlocking bytecode': [],
        'OP_PUSHBYTES_15 in unlocking bytecode': [],
        'OP_PUSHBYTES_16 in unlocking bytecode': [],
        'OP_PUSHBYTES_17 in unlocking bytecode': [],
        'OP_PUSHBYTES_18 in unlocking bytecode': [],
        'OP_PUSHBYTES_19 in unlocking bytecode': [],
        'OP_PUSHBYTES_2 in unlocking bytecode': ['skip'],
        'OP_PUSHBYTES_20 in unlocking bytecode': [],
        'OP_PUSHBYTES_21 in unlocking bytecode': [],
        'OP_PUSHBYTES_22 in unlocking bytecode': [],
        'OP_PUSHBYTES_23 in unlocking bytecode': [],
        'OP_PUSHBYTES_24 in unlocking bytecode': [],
        'OP_PUSHBYTES_25 in unlocking bytecode': [],
        'OP_PUSHBYTES_26 in unlocking bytecode': [],
        'OP_PUSHBYTES_27 in unlocking bytecode': [],
        'OP_PUSHBYTES_28 in unlocking bytecode': [],
        'OP_PUSHBYTES_29 in unlocking bytecode': [],
        'OP_PUSHBYTES_3 in unlocking bytecode': [],
        'OP_PUSHBYTES_30 in unlocking bytecode': [],
        'OP_PUSHBYTES_31 in unlocking bytecode': [],
        'OP_PUSHBYTES_32 in unlocking bytecode': [],
        'OP_PUSHBYTES_33 in unlocking bytecode': [],
        'OP_PUSHBYTES_34 in unlocking bytecode': [],
        'OP_PUSHBYTES_35 in unlocking bytecode': [],
        'OP_PUSHBYTES_36 in unlocking bytecode': [],
        'OP_PUSHBYTES_37 in unlocking bytecode': [],
        'OP_PUSHBYTES_38 in unlocking bytecode': [],
        'OP_PUSHBYTES_39 in unlocking bytecode': [],
        'OP_PUSHBYTES_4 in unlocking bytecode': [],
        'OP_PUSHBYTES_40 in unlocking bytecode': [],
        'OP_PUSHBYTES_41 in unlocking bytecode': [],
        'OP_PUSHBYTES_42 in unlocking bytecode': [],
        'OP_PUSHBYTES_43 in unlocking bytecode': [],
        'OP_PUSHBYTES_44 in unlocking bytecode': [],
        'OP_PUSHBYTES_45 in unlocking bytecode': [],
        'OP_PUSHBYTES_46 in unlocking bytecode': [],
        'OP_PUSHBYTES_47 in unlocking bytecode': [],
        'OP_PUSHBYTES_48 in unlocking bytecode': [],
        'OP_PUSHBYTES_49 in unlocking bytecode': [],
        'OP_PUSHBYTES_5 in unlocking bytecode': [],
        'OP_PUSHBYTES_50 in unlocking bytecode': [],
        'OP_PUSHBYTES_51 in unlocking bytecode': [],
        'OP_PUSHBYTES_52 in unlocking bytecode': [],
        'OP_PUSHBYTES_53 in unlocking bytecode': [],
        'OP_PUSHBYTES_54 in unlocking bytecode': [],
        'OP_PUSHBYTES_55 in unlocking bytecode': [],
        'OP_PUSHBYTES_56 in unlocking bytecode': [],
        'OP_PUSHBYTES_57 in unlocking bytecode': [],
        'OP_PUSHBYTES_58 in unlocking bytecode': [],
        'OP_PUSHBYTES_59 in unlocking bytecode': [],
        'OP_PUSHBYTES_6 in unlocking bytecode': [],
        'OP_PUSHBYTES_60 in unlocking bytecode': [],
        'OP_PUSHBYTES_61 in unlocking bytecode': [],
        'OP_PUSHBYTES_62 in unlocking bytecode': [],
        'OP_PUSHBYTES_63 in unlocking bytecode': [],
        'OP_PUSHBYTES_64 in unlocking bytecode': [],
        'OP_PUSHBYTES_65 in unlocking bytecode': [],
        'OP_PUSHBYTES_66 in unlocking bytecode': [],
        'OP_PUSHBYTES_67 in unlocking bytecode': [],
        'OP_PUSHBYTES_68 in unlocking bytecode': [],
        'OP_PUSHBYTES_69 in unlocking bytecode': [],
        'OP_PUSHBYTES_7 in unlocking bytecode': [],
        'OP_PUSHBYTES_70 in unlocking bytecode': [],
        'OP_PUSHBYTES_71 in unlocking bytecode': [],
        'OP_PUSHBYTES_72 in unlocking bytecode': [],
        'OP_PUSHBYTES_73 in unlocking bytecode': [],
        'OP_PUSHBYTES_74 in unlocking bytecode': [],
        'OP_PUSHBYTES_75 in unlocking bytecode': [],
        'OP_PUSHBYTES_8 in unlocking bytecode': [],
        'OP_PUSHBYTES_9 in unlocking bytecode': [],
      }),

      ...setExpectedResults(generateTestCases(['', 'OP_PUSHBYTES_$0 $(<0x01> <$0> OP_NUM2BIN)', 'OP_PUSHBYTES_$0 in locking bytecode'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 in locking bytecode': ['skip'],
        'OP_PUSHBYTES_10 in locking bytecode': [],
        'OP_PUSHBYTES_11 in locking bytecode': [],
        'OP_PUSHBYTES_12 in locking bytecode': [],
        'OP_PUSHBYTES_13 in locking bytecode': [],
        'OP_PUSHBYTES_14 in locking bytecode': [],
        'OP_PUSHBYTES_15 in locking bytecode': [],
        'OP_PUSHBYTES_16 in locking bytecode': [],
        'OP_PUSHBYTES_17 in locking bytecode': [],
        'OP_PUSHBYTES_18 in locking bytecode': [],
        'OP_PUSHBYTES_19 in locking bytecode': [],
        'OP_PUSHBYTES_2 in locking bytecode': [],
        'OP_PUSHBYTES_20 in locking bytecode': [],
        'OP_PUSHBYTES_21 in locking bytecode': [],
        'OP_PUSHBYTES_22 in locking bytecode': [],
        'OP_PUSHBYTES_23 in locking bytecode': [],
        'OP_PUSHBYTES_24 in locking bytecode': [],
        'OP_PUSHBYTES_25 in locking bytecode': [],
        'OP_PUSHBYTES_26 in locking bytecode': [],
        'OP_PUSHBYTES_27 in locking bytecode': [],
        'OP_PUSHBYTES_28 in locking bytecode': [],
        'OP_PUSHBYTES_29 in locking bytecode': [],
        'OP_PUSHBYTES_3 in locking bytecode': [],
        'OP_PUSHBYTES_30 in locking bytecode': [],
        'OP_PUSHBYTES_31 in locking bytecode': [],
        'OP_PUSHBYTES_32 in locking bytecode': [],
        'OP_PUSHBYTES_33 in locking bytecode': [],
        'OP_PUSHBYTES_34 in locking bytecode': [],
        'OP_PUSHBYTES_35 in locking bytecode': [],
        'OP_PUSHBYTES_36 in locking bytecode': [],
        'OP_PUSHBYTES_37 in locking bytecode': [],
        'OP_PUSHBYTES_38 in locking bytecode': [],
        'OP_PUSHBYTES_39 in locking bytecode': [],
        'OP_PUSHBYTES_4 in locking bytecode': [],
        'OP_PUSHBYTES_40 in locking bytecode': [],
        'OP_PUSHBYTES_41 in locking bytecode': [],
        'OP_PUSHBYTES_42 in locking bytecode': [],
        'OP_PUSHBYTES_43 in locking bytecode': [],
        'OP_PUSHBYTES_44 in locking bytecode': [],
        'OP_PUSHBYTES_45 in locking bytecode': [],
        'OP_PUSHBYTES_46 in locking bytecode': [],
        'OP_PUSHBYTES_47 in locking bytecode': [],
        'OP_PUSHBYTES_48 in locking bytecode': [],
        'OP_PUSHBYTES_49 in locking bytecode': [],
        'OP_PUSHBYTES_5 in locking bytecode': [],
        'OP_PUSHBYTES_50 in locking bytecode': [],
        'OP_PUSHBYTES_51 in locking bytecode': [],
        'OP_PUSHBYTES_52 in locking bytecode': [],
        'OP_PUSHBYTES_53 in locking bytecode': [],
        'OP_PUSHBYTES_54 in locking bytecode': [],
        'OP_PUSHBYTES_55 in locking bytecode': [],
        'OP_PUSHBYTES_56 in locking bytecode': [],
        'OP_PUSHBYTES_57 in locking bytecode': [],
        'OP_PUSHBYTES_58 in locking bytecode': [],
        'OP_PUSHBYTES_59 in locking bytecode': [],
        'OP_PUSHBYTES_6 in locking bytecode': [],
        'OP_PUSHBYTES_60 in locking bytecode': [],
        'OP_PUSHBYTES_61 in locking bytecode': [],
        'OP_PUSHBYTES_62 in locking bytecode': [],
        'OP_PUSHBYTES_63 in locking bytecode': [],
        'OP_PUSHBYTES_64 in locking bytecode': [],
        'OP_PUSHBYTES_65 in locking bytecode': [],
        'OP_PUSHBYTES_66 in locking bytecode': [],
        'OP_PUSHBYTES_67 in locking bytecode': [],
        'OP_PUSHBYTES_68 in locking bytecode': [],
        'OP_PUSHBYTES_69 in locking bytecode': [],
        'OP_PUSHBYTES_7 in locking bytecode': [],
        'OP_PUSHBYTES_70 in locking bytecode': [],
        'OP_PUSHBYTES_71 in locking bytecode': [],
        'OP_PUSHBYTES_72 in locking bytecode': [],
        'OP_PUSHBYTES_73 in locking bytecode': [],
        'OP_PUSHBYTES_74 in locking bytecode': [],
        'OP_PUSHBYTES_75 in locking bytecode': [],
        'OP_PUSHBYTES_8 in locking bytecode': [],
        'OP_PUSHBYTES_9 in locking bytecode': [],
      }),

      ['', 'OP_0 OP_NOT', 'OP_0 in locking bytecode, OP_NOT'],
      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0', '$(<1> <$0> OP_NUM2BIN)', 'OP_PUSHBYTES_$0 split across unlocking and locking bytecode'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_10 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_11 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_12 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_13 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_14 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_15 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_16 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_17 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_18 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_19 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_2 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_20 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_21 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_22 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_23 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_24 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_25 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_26 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_27 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_28 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_29 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_3 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_30 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_31 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_32 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_33 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_34 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_35 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_36 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_37 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_38 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_39 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_4 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_40 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_41 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_42 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_43 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_44 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_45 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_46 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_47 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_48 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_49 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_5 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_50 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_51 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_52 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_53 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_54 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_55 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_56 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_57 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_58 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_59 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_6 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_60 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_61 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_62 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_63 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_64 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_65 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_66 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_67 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_68 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_69 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_7 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_70 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_71 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_72 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_73 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_74 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_75 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_8 split across unlocking and locking bytecode': ['invalid'],
        'OP_PUSHBYTES_9 split across unlocking and locking bytecode': ['invalid'],
      }),

      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0 0x01', '', 'OP_PUSHBYTES_$0 with missing bytes in unlocking bytecode, empty locking bytecode'], [range(74, 2).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_10 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_11 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_12 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_13 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_14 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_15 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_16 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_17 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_18 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_19 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_2 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_20 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_21 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_22 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_23 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_24 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_25 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_26 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_27 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_28 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_29 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_3 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_30 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_31 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_32 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_33 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_34 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_35 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_36 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_37 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_38 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_39 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_4 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_40 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_41 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_42 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_43 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_44 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_45 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_46 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_47 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_48 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_49 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_5 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_50 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_51 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_52 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_53 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_54 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_55 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_56 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_57 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_58 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_59 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_6 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_60 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_61 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_62 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_63 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_64 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_65 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_66 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_67 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_68 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_69 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_7 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_70 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_71 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_72 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_73 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_74 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_75 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_8 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
        'OP_PUSHBYTES_9 with missing bytes in unlocking bytecode, empty locking bytecode': ['invalid'],
      }),

      ['OP_PUSHBYTES_1', 'OP_SIZE <1> OP_EQUAL OP_NIP', 'OP_PUSHBYTES_1 with missing byte', ['invalid']],
      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0 0x00', 'OP_SIZE <$0> OP_EQUAL OP_NIP', 'OP_PUSHBYTES_$0 with missing bytes, check size'], [range(74, 2).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_10 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_11 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_12 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_13 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_14 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_15 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_16 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_17 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_18 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_19 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_2 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_20 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_21 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_22 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_23 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_24 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_25 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_26 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_27 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_28 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_29 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_3 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_30 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_31 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_32 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_33 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_34 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_35 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_36 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_37 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_38 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_39 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_4 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_40 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_41 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_42 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_43 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_44 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_45 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_46 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_47 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_48 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_49 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_5 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_50 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_51 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_52 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_53 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_54 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_55 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_56 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_57 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_58 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_59 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_6 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_60 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_61 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_62 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_63 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_64 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_65 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_66 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_67 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_68 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_69 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_7 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_70 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_71 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_72 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_73 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_74 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_75 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_8 with missing bytes, check size': ['invalid'],
        'OP_PUSHBYTES_9 with missing bytes, check size': ['invalid'],
      }),
      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0', '', 'OP_PUSHBYTES_$0 with no bytes'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 with no bytes': ['invalid'],
        'OP_PUSHBYTES_10 with no bytes': ['invalid'],
        'OP_PUSHBYTES_11 with no bytes': ['invalid'],
        'OP_PUSHBYTES_12 with no bytes': ['invalid'],
        'OP_PUSHBYTES_13 with no bytes': ['invalid'],
        'OP_PUSHBYTES_14 with no bytes': ['invalid'],
        'OP_PUSHBYTES_15 with no bytes': ['invalid'],
        'OP_PUSHBYTES_16 with no bytes': ['invalid'],
        'OP_PUSHBYTES_17 with no bytes': ['invalid'],
        'OP_PUSHBYTES_18 with no bytes': ['invalid'],
        'OP_PUSHBYTES_19 with no bytes': ['invalid'],
        'OP_PUSHBYTES_2 with no bytes': ['invalid'],
        'OP_PUSHBYTES_20 with no bytes': ['invalid'],
        'OP_PUSHBYTES_21 with no bytes': ['invalid'],
        'OP_PUSHBYTES_22 with no bytes': ['invalid'],
        'OP_PUSHBYTES_23 with no bytes': ['invalid'],
        'OP_PUSHBYTES_24 with no bytes': ['invalid'],
        'OP_PUSHBYTES_25 with no bytes': ['invalid'],
        'OP_PUSHBYTES_26 with no bytes': ['invalid'],
        'OP_PUSHBYTES_27 with no bytes': ['invalid'],
        'OP_PUSHBYTES_28 with no bytes': ['invalid'],
        'OP_PUSHBYTES_29 with no bytes': ['invalid'],
        'OP_PUSHBYTES_3 with no bytes': ['invalid'],
        'OP_PUSHBYTES_30 with no bytes': ['invalid'],
        'OP_PUSHBYTES_31 with no bytes': ['invalid'],
        'OP_PUSHBYTES_32 with no bytes': ['invalid'],
        'OP_PUSHBYTES_33 with no bytes': ['invalid'],
        'OP_PUSHBYTES_34 with no bytes': ['invalid'],
        'OP_PUSHBYTES_35 with no bytes': ['invalid'],
        'OP_PUSHBYTES_36 with no bytes': ['invalid'],
        'OP_PUSHBYTES_37 with no bytes': ['invalid'],
        'OP_PUSHBYTES_38 with no bytes': ['invalid'],
        'OP_PUSHBYTES_39 with no bytes': ['invalid'],
        'OP_PUSHBYTES_4 with no bytes': ['invalid'],
        'OP_PUSHBYTES_40 with no bytes': ['invalid'],
        'OP_PUSHBYTES_41 with no bytes': ['invalid'],
        'OP_PUSHBYTES_42 with no bytes': ['invalid'],
        'OP_PUSHBYTES_43 with no bytes': ['invalid'],
        'OP_PUSHBYTES_44 with no bytes': ['invalid'],
        'OP_PUSHBYTES_45 with no bytes': ['invalid'],
        'OP_PUSHBYTES_46 with no bytes': ['invalid'],
        'OP_PUSHBYTES_47 with no bytes': ['invalid'],
        'OP_PUSHBYTES_48 with no bytes': ['invalid'],
        'OP_PUSHBYTES_49 with no bytes': ['invalid'],
        'OP_PUSHBYTES_5 with no bytes': ['invalid'],
        'OP_PUSHBYTES_50 with no bytes': ['invalid'],
        'OP_PUSHBYTES_51 with no bytes': ['invalid'],
        'OP_PUSHBYTES_52 with no bytes': ['invalid'],
        'OP_PUSHBYTES_53 with no bytes': ['invalid'],
        'OP_PUSHBYTES_54 with no bytes': ['invalid'],
        'OP_PUSHBYTES_55 with no bytes': ['invalid'],
        'OP_PUSHBYTES_56 with no bytes': ['invalid'],
        'OP_PUSHBYTES_57 with no bytes': ['invalid'],
        'OP_PUSHBYTES_58 with no bytes': ['invalid'],
        'OP_PUSHBYTES_59 with no bytes': ['invalid'],
        'OP_PUSHBYTES_6 with no bytes': ['invalid'],
        'OP_PUSHBYTES_60 with no bytes': ['invalid'],
        'OP_PUSHBYTES_61 with no bytes': ['invalid'],
        'OP_PUSHBYTES_62 with no bytes': ['invalid'],
        'OP_PUSHBYTES_63 with no bytes': ['invalid'],
        'OP_PUSHBYTES_64 with no bytes': ['invalid'],
        'OP_PUSHBYTES_65 with no bytes': ['invalid'],
        'OP_PUSHBYTES_66 with no bytes': ['invalid'],
        'OP_PUSHBYTES_67 with no bytes': ['invalid'],
        'OP_PUSHBYTES_68 with no bytes': ['invalid'],
        'OP_PUSHBYTES_69 with no bytes': ['invalid'],
        'OP_PUSHBYTES_7 with no bytes': ['invalid'],
        'OP_PUSHBYTES_70 with no bytes': ['invalid'],
        'OP_PUSHBYTES_71 with no bytes': ['invalid'],
        'OP_PUSHBYTES_72 with no bytes': ['invalid'],
        'OP_PUSHBYTES_73 with no bytes': ['invalid'],
        'OP_PUSHBYTES_74 with no bytes': ['invalid'],
        'OP_PUSHBYTES_75 with no bytes': ['invalid'],
        'OP_PUSHBYTES_8 with no bytes': ['invalid'],
        'OP_PUSHBYTES_9 with no bytes': ['invalid'],
      }),

      ...setExpectedResults(generateTestCases(['OP_PUSHBYTES_$0', 'OP_DROP <1>', 'OP_PUSHBYTES_$0 with no bytes, OP_DROP <1>'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'OP_PUSHBYTES_1 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_10 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_11 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_12 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_13 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_14 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_15 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_16 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_17 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_18 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_19 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_2 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_20 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_21 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_22 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_23 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_24 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_25 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_26 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_27 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_28 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_29 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_3 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_30 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_31 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_32 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_33 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_34 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_35 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_36 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_37 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_38 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_39 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_4 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_40 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_41 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_42 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_43 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_44 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_45 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_46 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_47 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_48 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_49 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_5 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_50 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_51 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_52 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_53 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_54 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_55 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_56 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_57 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_58 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_59 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_6 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_60 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_61 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_62 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_63 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_64 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_65 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_66 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_67 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_68 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_69 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_7 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_70 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_71 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_72 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_73 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_74 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_75 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_8 with no bytes, OP_DROP <1>': ['invalid'],
        'OP_PUSHBYTES_9 with no bytes, OP_DROP <1>': ['invalid'],
      }),

      ...setExpectedResults(generateTestCases(['<0> OP_IF OP_PUSHBYTES_$0 $(<0x01> <$0> OP_NUM2BIN) OP_ENDIF', '<1>', 'unexecuted OP_PUSHBYTES_$0 in unlocking bytecode'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'unexecuted OP_PUSHBYTES_1 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_10 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_11 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_12 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_13 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_14 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_15 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_16 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_17 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_18 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_19 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_2 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_20 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_21 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_22 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_23 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_24 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_25 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_26 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_27 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_28 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_29 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_3 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_30 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_31 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_32 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_33 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_34 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_35 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_36 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_37 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_38 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_39 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_4 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_40 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_41 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_42 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_43 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_44 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_45 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_46 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_47 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_48 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_49 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_5 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_50 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_51 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_52 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_53 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_54 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_55 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_56 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_57 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_58 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_59 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_6 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_60 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_61 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_62 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_63 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_64 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_65 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_66 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_67 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_68 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_69 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_7 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_70 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_71 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_72 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_73 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_74 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_75 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_8 in unlocking bytecode': ['invalid'],
        'unexecuted OP_PUSHBYTES_9 in unlocking bytecode': ['invalid'],
      }),

      ...setExpectedResults(generateTestCases(['', '<0> OP_IF OP_PUSHBYTES_$0 $(<0x01> <$0> OP_NUM2BIN) OP_ENDIF <1>', 'unexecuted OP_PUSHBYTES_$0 in locking bytecode'], [range(75, 1).map((i) => [`${i}`, `${i}`])]), {
        'unexecuted OP_PUSHBYTES_1 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_10 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_11 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_12 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_13 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_14 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_15 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_16 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_17 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_18 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_19 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_2 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_20 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_21 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_22 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_23 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_24 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_25 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_26 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_27 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_28 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_29 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_3 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_30 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_31 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_32 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_33 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_34 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_35 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_36 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_37 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_38 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_39 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_4 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_40 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_41 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_42 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_43 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_44 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_45 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_46 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_47 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_48 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_49 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_5 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_50 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_51 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_52 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_53 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_54 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_55 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_56 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_57 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_58 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_59 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_6 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_60 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_61 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_62 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_63 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_64 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_65 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_66 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_67 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_68 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_69 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_7 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_70 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_71 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_72 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_73 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_74 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_75 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_8 in locking bytecode': [],
        'unexecuted OP_PUSHBYTES_9 in locking bytecode': [],
      }),
    ],
  ],
] as const satisfies VmbTestDefinitionGroup[];
